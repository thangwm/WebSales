@model WebSales.Models.AddAccountViewModel
@{
    ViewBag.Title = "Add";
}
@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/Admin/Home" class="nav-link">Home</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/Admin/Account" class="nav-link">Account</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">@ViewBag.Title</a>
        </li>
    </ul>
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>@ViewBag.Title</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="/Admin/Account">Account</a></li>
                        <li class="breadcrumb-item active">@ViewBag.Title</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">

        <!-- Default box -->
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">@ViewBag.Title Account</h3>
            </div>
            <div class="card-body">
                <div class="bs-stepper-content">
                    @using (Html.BeginForm("Add", "Account", FormMethod.Post, new { }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(false)
                        <!-- your steps content here -->
                    <div id="logins-part" class="content active dstepper-block" role="tabpanel" aria-labelledby="logins-part-trigger">
                        <div class="form-group">
                            <label for="exampleInputEmail1">UserName</label>
                            @Html.TextBoxFor(x => x.UserName, new { @class = "form-control", @placeholder = "UserName" })
                            @Html.ValidationMessageFor(x => x.UserName, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">FullName</label>
                            @Html.TextBoxFor(x => x.FullName, new { @class = "form-control", @placeholder = "FullName" })
                            @Html.ValidationMessageFor(x => x.FullName, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Email</label>
                            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @placeholder = "Email" })
                            @Html.ValidationMessageFor(x => x.Email, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Phone</label>
                            @Html.TextBoxFor(x => x.Phone, new { @class = "form-control", @placeholder = "Phone" })
                            @Html.ValidationMessageFor(x => x.Phone, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Role</label>
                            @Html.DropDownListFor(x => x.Roles, ViewBag.Role as SelectList, "-Select Role-", new { @class = "form-control", @placeholder = "Role", @multiple = "@multiple" })
                            @Html.ValidationMessageFor(x => x.Roles, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Password</label>
                            @Html.PasswordFor(x => x.Password, new { @class = "form-control", @placeholder = "PassWord" })
                            @Html.ValidationMessageFor(x => x.Password, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">ConfirmPassword</label>
                            @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control", @placeholder = "ConfirmPassword" })
                            @Html.ValidationMessageFor(x => x.ConfirmPassword, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <button type="submit" class="btn btn-primary">Submit</button>
                            <a href="/Admin/Account" class="btn btn-danger">Come back</a>
                        </div>
                    </div>
                    }
                </div>
            </div>
            <!-- /.card-body -->
            <div class="card-footer">

            </div>
            <!-- /.card-footer-->
        </div>
        <!-- /.card -->

    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
@section scripts{
    <script>
        $(document).ready(function () {
            CKEDITOR.replace('txtDetail', {
                customConfig: '/content/ckeditor/config.js',
                extraAllowedContent: 'span',
            });
        });
        function BrowseServer(field) {
            var finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                document.getElementById(field).value = fileUrl;
            };
            finder.popup();
        }
    </script>
}

